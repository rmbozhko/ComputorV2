%{
    #include <iostream>
    extern int yylex();
    extern int yyparse ();
    extern FILE* yyin;
    extern unsigned linenum;
    void        yyerror(const char* s);
%}


%code requires {
}

//%parse-param { }

%union {
    char*      data;
}

%token M_MULT MULT ASSIGN EVAL DIV MOD 
%token <data> NUMBER VAR_NAME FUNC_NAME MATRIX
%token ENDL LPAREN RPAREN

//%type <>

%left ADD SUB

%%
start:
    number ADD number { std::cout << "TA DA" << std::endl; }
    | number SUB number { std::cout << "TA DA" << std::endl; }
    | number number { std::cout << "Signed number case" << std::endl; } //12-2, 12+2

number:
    NUMBER
%%

void        yyerror(const char* s) {
    std::cerr << "Error caught: " << s << std::endl;
}

